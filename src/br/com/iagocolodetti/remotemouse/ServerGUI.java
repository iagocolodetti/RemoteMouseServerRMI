
package br.com.iagocolodetti.remotemouse;

import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import javax.swing.JOptionPane;
import lipermi.exception.LipeRMIException;
import lipermi.handler.CallHandler;
import lipermi.net.Server;

/**
 *
 * @author iagocolodetti
 */
public class ServerGUI extends javax.swing.JFrame {
    
    private final static int MIN_PORT = 0;
    private final static int MAX_PORT = 65535;
    
    /**
     * Creates new form Server
     */
    public ServerGUI() {
        initComponents();
        
        // -------------------------------------------------
        // Definir tamanho exato do layout e centralizar
        setSize(new java.awt.Dimension(258, 228));
        setLocationRelativeTo(null);
        // -------------------------------------------------
        
        jTextFieldPort.requestFocus();
        jLabelAviso.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelIP = new javax.swing.JLabel();
        jTextFieldIP = new javax.swing.JTextField();
        jLabelPort = new javax.swing.JLabel();
        jTextFieldPort = new javax.swing.JTextField();
        jButtonLigarDesligar = new javax.swing.JButton();
        jLabelAviso = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RemoteMouseServer");
        setMaximumSize(new java.awt.Dimension(258, 228));
        setMinimumSize(new java.awt.Dimension(258, 228));
        setName("ServerGUI"); // NOI18N
        setResizable(false);

        jLabelIP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelIP.setText("IP:");

        jTextFieldIP.setEditable(false);
        jTextFieldIP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldIP.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabelPort.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPort.setText("Porta:");

        jTextFieldPort.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldPort.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldPort.setText("1099");

        jButtonLigarDesligar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonLigarDesligar.setText("LIGAR");
        jButtonLigarDesligar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLigarDesligarActionPerformed(evt);
            }
        });

        jLabelAviso.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabelAviso.setForeground(new java.awt.Color(230, 0, 0));
        jLabelAviso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelAviso.setText("Para desligar o serviço, feche a aplicação.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPort)
                    .addComponent(jLabelIP))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldPort)
                    .addComponent(jTextFieldIP, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelAviso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonLigarDesligar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIP)
                    .addComponent(jTextFieldIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPort)
                    .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabelAviso)
                .addGap(18, 18, 18)
                .addComponent(jButtonLigarDesligar)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLigarDesligarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLigarDesligarActionPerformed
        
        if (!jLabelAviso.isVisible()) {
            String sPort = jTextFieldPort.getText();
            if (!sPort.isEmpty()) {
                try {
                    int port = Integer.parseInt(sPort);
                    if (port >= MIN_PORT && port <= MAX_PORT) {
                        // Ligando o serviço...
                        MouseServiceImpl mouse = new MouseServiceImpl();

                        CallHandler callHandler = new CallHandler();
                        callHandler.registerGlobal(IMouse.class, mouse);

                        new Server().bind(port, callHandler);

                        System.out.println(mouse + "\n");

                        jTextFieldPort.setEditable(false);

                        jLabelAviso.setVisible(true);

                        jTextFieldIP.setText(InetAddress.getLocalHost().getHostAddress());
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "O número da porta deve ser um inteiro positivo de no mínimo " + MIN_PORT + " e no máximo " + MAX_PORT + ".", "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (UnknownHostException e) {
                    jTextFieldIP.setText("Desconhecido");
                    JOptionPane.showMessageDialog(rootPane, "Não foi possível localizar o ip da máquina local.", "Erro", JOptionPane.ERROR_MESSAGE);
                    System.err.println(e);
                } catch (LipeRMIException e) {
                    JOptionPane.showMessageDialog(rootPane, "Não foi possível registrar o serviço.", "Erro", JOptionPane.ERROR_MESSAGE);
                    System.err.println(e);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(rootPane, "Não foi possível ligar o serviço, verifique se a porta já está em uso ou se a rede está funcionando.", "Erro", JOptionPane.ERROR_MESSAGE);
                    System.err.println(e);
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(rootPane, "A porta deve ser um número inteiro positivo de no mínimo " + MIN_PORT + " e no máximo " + MAX_PORT + ".", "Erro", JOptionPane.ERROR_MESSAGE);
                    System.err.println(e);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Digite a porta em que deseja ligar o serviço.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Serviço já ligado, feche a aplicação para desligá-lo.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonLigarDesligarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLigarDesligar;
    private javax.swing.JLabel jLabelAviso;
    private javax.swing.JLabel jLabelIP;
    private javax.swing.JLabel jLabelPort;
    private javax.swing.JTextField jTextFieldIP;
    private javax.swing.JTextField jTextFieldPort;
    // End of variables declaration//GEN-END:variables
}
